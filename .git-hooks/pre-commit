#!/bin/bash
# Pre-commit hook to prevent committing sensitive files

echo "Running pre-commit checks for sensitive information..."

# Check for sensitive files
SENSITIVE_FILES=$(git diff --cached --name-only | grep -E '(application-dev\.properties|application-prod\.properties|application\.properties|\.env|credentials\.|secret\.|password\.|key\.)')

if [ -n "$SENSITIVE_FILES" ]; then
  echo "ERROR: Attempting to commit sensitive files:"
  echo "$SENSITIVE_FILES"
  echo ""
  echo "These files may contain secrets and should not be committed."
  echo "If you're sure these files don't contain secrets, use --no-verify to bypass this check."
  exit 1
fi

# Check for potential secrets in staged files
STAGED_FILES=$(git diff --cached --name-only)

for file in $STAGED_FILES; do
  # Skip binary files
  if [[ -f "$file" && "$(file -b --mime-type "$file" | grep -v "^text/")" == "" ]]; then
    # Check for common secret patterns
    SECRETS=$(grep -l -E '(password|passwd|secret|api[-_]?key|access[-_]?key|auth[-_]?token|credentials|private[-_]?key|BEGIN (RSA|DSA|EC|OPENSSH) PRIVATE KEY|jdbc:.*:.*:.*)' "$file" || true)
    
    if [ -n "$SECRETS" ]; then
      echo "WARNING: Potential secrets found in $file"
      echo "Please review the file carefully before committing."
      echo "If you're sure this is not a secret, use --no-verify to bypass this check."
      exit 1
    fi
  fi
done

echo "No sensitive files or potential secrets detected."
exit 0
